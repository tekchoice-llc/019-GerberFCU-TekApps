//window.onload = checkAvailableWidth;
window.onresize = checkAvailableWidth;

function checkAvailableWidth(){
 var container = document.getElementById('RightblockID');
 var container2 = document.getElementById('LeftblockID');
 var currSize = document.body.clientWidth;
 if (container === null || container2 === null){
  var size1 = currSize;
  if (container2 === null){ size1=size1-10; } //202109 kds prevent horiz scroll
  container.style.width = size1.toString() + 'px';
 }else{
  if (currSize < 1120 ){
   container.style.width = '800px';
  }else{
   var size1 = (currSize/4) *3;
   var size2 = (currSize/4)-20;
   container.style.width = size1.toString() + 'px';
   container2.style.width = size2.toString() + 'px';
  }
 }
}

function DoIni(){
 checkAvailableWidth();
 DoAnchorFocus();
 document.getElementById('HtmlTrackStartTime').value=GetTrackTime();
}

String.prototype.lpad = function(padString, length) {
    var str = this;
    while (str.length < length)
        str = padString + str;
    return str;
}

function DoAnchorFocus(){
 if(document.getElementById('HtmlAnchor'))
 {
   var elAnchor = document.getElementById('HtmlAnchor');
   var moveelAnchor;
   var gotoelAnchor;
   if (elAnchor.value!=='')
   {
    gotoelAnchor=elAnchor.value.substring(3);
    moveelAnchor = Number(gotoelAnchor);
    if (moveelAnchor >9)
    {
      moveelAnchor = moveelAnchor-5
      gotoelAnchor=moveelAnchor.toString();
      gotoelAnchor= "Rec" + gotoelAnchor.lpad("0", 10)
      if(document.getElementById(gotoelAnchor))
      { 
       document.getElementById(gotoelAnchor).scrollIntoView();
       elAnchor.value='';
      }
    }
   }
 }
 if(document.getElementById('HtmlFocus'))
 {
   var elFocus = document.getElementById('HtmlFocus');
   if (elFocus.value!=='')
   {
    if(document.getElementById(elFocus.value))
    { 
      document.getElementById(elFocus.value).focus();
      elFocus.value='';
    }
   }
 }
}

function SubmitForm(myOption){
 document.getElementById('HtmlTrackEndTime').value=GetTrackTime();
 document.getElementById('MyOption').value = myOption;
 document.getElementById('htmlrginputform').submit();
}

function SubmitFormAnchor(myOption,MyAnchor){
 document.getElementById('HtmlAnchor').value=MyAnchor;
 SubmitForm(myOption);
}

function SubmitFormFocus(myOption,MyFocus){
 document.getElementById('HtmlFocus').value=MyFocus;
 SubmitForm(myOption);
}

function GetTrackTime(){
 var d = new Date();
 var h = (d.getHours()<10?'0':'') + d.getHours();
 var m = (d.getMinutes()<10?'0':'') + d.getMinutes();
 var s = (d.getSeconds()<10?'0':'') + d.getSeconds();
 return h+":"+m+":"+s;
}

function ValDate(input){
 if (!(isDate(input.value,'/')) && input.value.length>0){
  alert('Invalid Date Format');
  input.value='';
  return false;
 }else{
   if (input.value.length==0)
   {
    return false;
   }else{
    return true;
   }
 }
}

function ClearField(input){
 input.value='';
}

function isDate(txtDate, separator) { 
 var aoDate, 
 ms,  
 month, day, year; 
 if (separator === undefined) { 
   separator = '/'; 
 } 
 aoDate = txtDate.split(separator); 
 if (aoDate.length !== 3) { 
   return false; 
 } 
 month = aoDate[0] - 1; 
 day = aoDate[1] - 0; 
 year = aoDate[2] - 0; 
 if (year < 100) {
   year = year +1900;
 }
 if (year < 1000 || year > 3000) { 
   return false; 
 } 
 ms = (new Date(year, month, day)).getTime(); 
 aoDate = new Date(); 
 aoDate.setTime(ms); 
 if (aoDate.getFullYear() !== year || 
     aoDate.getMonth() !== month || 
     aoDate.getDate() !== day) { 
   return false; 
 } 
return true; 
}

function FormatDate(tdate){
 var dd = tdate.getDate();
 var mm = tdate.getMonth()+1; //January is 0!
 var yyyy = tdate.getFullYear();
 if(dd<10) {
    dd = '0'+dd
 } 
 if(mm<10) {
    mm = '0'+mm
 } 
 return mm + '/' + dd + '/' + yyyy;
}

function isNumeric(n){
 return !isNaN(parseFloat(n)) && isFinite(n);
}

function OnlyNumbers(input){
 var str = input.value;
 input.value = str.replace(/[^0-9]/, '');
}

function AlphaNum(input){
 var str = input.value;
 input.value = str.replace(/[^0-9a-zA-Z\s]/, '');
}

function NumbersPeriod(input){
 var str = input.value;
 input.value = str.replace(/[^0-9.,]/, '');
}

function CurrencyFormat(input){
 if (input.value.length>0 && input.value!= '$0.00'){
  var str=input.value;
  str = str.replace('$', '');
  str = str.replace(',', '');
  if (isNumeric(str)){
   var num = str;
   var multiplier = Math.pow(10,2);
   var m = (Math.round(num*multiplier)/multiplier).toFixed(2);
   input.value = '$' + m.replace(/\d(?=(\d{3})+\.)/g, '$&,');
   return true;
  }else{
   alert('Invalid Amount');
   input.value= '$0.00';
   return false;
  }
 }
}

function formatPhoneNumber(input) {
 if (input.value.length>0)
 {
  var cleaned = ('' + input.value).replace(/\D/g, '')
  var match = cleaned.match(/^(\d{3})(\d{3})(\d{4})$/)
  if (match) {
   input.value= match[1] + '-' + match[2] + '-' + match[3];
   return true;
  }
  alert('Invalid phone number');
  input.focus();
  return false;
 }
}

function isInt(n){
 if (isNumeric(n)){
  if(n%1 === 0){
   return true;
  }else{
   return false;
  }
 }else{
  return false;
 }
}
